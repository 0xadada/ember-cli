#!/usr/bin/env node

var nopt = require('nopt'),
    commands = require('../lib/commands/commands'),
    chalk = require('chalk'),
    RSVP = require('rsvp'),
    Promise = RSVP.Promise,
    rest = require('lodash-node/modern/arrays/rest'),
    merge = require('lodash-node/modern/objects/merge'),
    path = require('path'),
    pkg = require('../package.json');

require('../lib/ext/promise');

process.title = 'ember';

var opts = nopt({
  help: Boolean,
  version: Boolean
}, {
  h: '--help',
  v: '--version'
});

var cmd = opts.argv.remain[0];

function init() {

  if (opts.help) {
    console.log('ember-cli','available commands:');
    for(var c in commands){
        console.log('    ' + commands[c].usage.apply());
    }
    return 0;
  }

  if (opts.version) {
    console.log('ember-cli', pkg.version);
    return 0;
  }

  var action = commands[cmd];

  if (!action) {
    throw new Error('The specified command ' + chalk.underline(cmd) + ' could not be found');
  }

  opts = nopt.apply(null, action.options);

  var args = rest(opts.argv.remain),
      options = merge(opts, {
        appRoot: process.cwd(),
        cliRoot: path.resolve(path.join(__dirname, '..'))
      });

  args.push(options);

  return action.run.apply(this, args);
}

Promise.resolve(init()).then(process.exit);

RSVP.on('error', function(error) {
  console.log(chalk.red('Unhandled Error'));
  throw error;
});
