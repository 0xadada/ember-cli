#!/usr/bin/env node

var nopt = require('nopt'),
    commands = require('../lib/cli/commands'),
    chalk = require("chalk"),
    RSVP = require("rsvp"),
    rest = require("lodash-node/modern/arrays/rest"),
    merge = require("lodash-node/modern/objects/merge"),
    path = require("path"),
    pkg = require('../package.json');

process.title = 'ember';

var opts = nopt({
  help: Boolean,
  version: Boolean
}, {
  h: '--help',
  v: '--version'
});

RSVP.Promise.prototype.asStatus = function() {
  this.then(function() {
    return 0;
  }).catch(function() {
    return 1;
  });
  return this;
}

var cmd = opts.argv.remain[0];

function init() {

  if(opts.version) {
    console.log('ember-cli', pkg.version);
    return 0;
  }


  var action = commands[cmd];

  opts = nopt(action.options);

  if(!action) {
    throw new Error("The specified command " + chalk.underline(cmd) + " could not be found");
  }

  var args = rest(opts.argv.remain),
      options = merge(opts, {
        appRoot: process.cwd(),
        cliRoot: path.resolve(path.join(__dirname, ".."))
      });

  args.push(options);

  return action.run.apply(this, args).asStatus();

}

init().then(process.exit);

RSVP.on("error", function(error) {
  console.log(chalk.red("Unhandled Error"));
  console.error(error);
  if(opts.debug) {
    console.error(error.stack);
  }
  process.exit(1);
});
